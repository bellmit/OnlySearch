package application.service;

import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.annotation.AfterReturning;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;

import javax.servlet.http.HttpServletRequest;
import java.util.Enumeration;


@Aspect
@Component
public class WebLog4jAspect {

    private Logger logger = LoggerFactory.getLogger(WebLog4jAspect.class);



    @Pointcut("execution(* application.*.*..*.*(..))")
    public void webLog(){

    }

    @Before("webLog()")
    public void doBefore(JoinPoint joinPoint){
        try {
            //接收到请求，记录请求内容
            ServletRequestAttributes servletRequestAttributes = (ServletRequestAttributes) RequestContextHolder.currentRequestAttributes();
            HttpServletRequest request = servletRequestAttributes.getRequest();

            //记录下请求内容
            logger.info("URL : "+request.getRequestURL().toString());
            logger.info("HTTP_METHOD : "+request.getMethod());
            logger.info("IP : "+request.getRemoteAddr());

            Enumeration<String> parameterNames = request.getParameterNames();

            while(parameterNames.hasMoreElements()){
                String name = parameterNames.nextElement();
                logger.info("name : {},value : {}",name,request.getParameter(name));
            }
        }
        catch (Exception e){

        }
    }


    @AfterReturning(returning = "ret",pointcut = "webLog()")
    public void doAfterReturning(Object ret) throws Throwable{
        //处理完请求，返回内容
        logger.info("RESPONSE : "+ret);
    }

}
